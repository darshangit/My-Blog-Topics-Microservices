[
  {
    "title":"Git Command: init",
    "preDescription":null,
    "note":null,
    "mainDescription":["Let us create a new folder as Git-demo. We will use this across our learning's.",
    "Create a git_file1.txt in it. This is the working area.",
    "If we want to create a git repository in Git-demo folder, open git-bash prompt in that folder and type the command <-- git init -->.",
    "This will result in creating a .git directory. This is the heart of git. Every object/tracking/history is managed in this."],
    "image":"git/git_add.PNG",
    "code":["git init"],
    "postDescription":["From the above snapshot we see how the git init has created a new .git directory.",
      "For the curious one's, you can check out the contents of .git directory. It's interesting !!!"]
  },
  {
    "title":"Git Command: status",
    "preDescription":null,
    "note":null,
    "mainDescription":["Git status gives status of the repository at that point in time.",
    "If we execute <-- git status --> ,we will see the git_file1.txt in RED , saying it is untracked(Git doesn't know about it).",
    "Well its right, the file is just created in the working area but it has not been sent to the staging area yet.",
    "<-- git status --> would yield the below result."],
    "image":"git/git_status.PNG",
    "code":["git status"],
    "postDescription":null
  },
  {
    "title":"Git Command: add",
    "preDescription":null,
    "note":null,
    "mainDescription":["<-- git add --> command would add the specified files to the staging area.",
    "Running git add command and checking git status would show the file is in green which means git recognize's this file now(It will be tracked further on)."],
    "image":"git/git_add2.PNG",
    "code":["git add"],
    "postDescription":null
  },
  {
    "title":"Git Command: commit",
    "preDescription":null,
    "note":null,
    "mainDescription":["git commit would move all the tracked files to the git repository.",
    "Running git commit would ask for a message to be inserted, I prefer to give the message inline. It can be done by:","<-- git commit -m \"Put your message here\" -->.",
    "<-- git log --> gives the history of the actions performed on the repository.",
    "Running the above commands would yield the below shown results:"],
    "image":"git/git_commit.PNG",
    "code":["git commit -m \"Initial Commit bla bla bla\""],
    "postDescription":["The git log shows the commitId(hash), which is unique.",
      "The first 6 digits are be used for tracking and checking the differences between the files."]
  },
  {
    "title":"Git Command: diff",
    "preDescription":null,
    "note":null,
    "mainDescription":["Consider we add some lines to git_file1.txt and commit it. To check the differences between the commits, <-- git diff --> is the command to go.",
    "It gives the difference between the 2 commits."],
    "image":"git/git_diff.PNG",
    "code":["You can diff based on the git commitId or the HEAD pointer.",
    "Do a <-- git log --> , get the first 6 digits of the commit id and do a diff.",
    "For example: git diff ef5066..f2d59b"],
    "postDescription":["HEAD points to the head/parent of the repository.",
    "HEAD~1 represents parent minus 1 check in.",
    "Here we are finding the difference between parent-1 and parent, which shows 1 added line.",
    "Use commitId or HEAD , whichever you are comfortable with."]
  },
  {
    "title":"Git Command: push",
    "preDescription":null,
    "note":null,
    "mainDescription":["Till now every command is working with the local repository.",
      "Consider we need these changes to be reflected in a remote repository in Github.<-- git push --> would be enable us to do it."],
    "image":"git/git_push.PNG",
    "code":["1.Navigate https://github.com and create a new repository. As shown above.",
    "2.Copy the repository url and run the command :  <-- git remote add origin <your repository URL> -->. Here    origin is just a name, It can be anything you like.",
    "3.Run the command : <-- git push origin master --> . It would push the local changes to the repository."],
    "postDescription":null
  },
  {
    "title":"Git Command: pull",
    "preDescription":null,
    "note":null,
    "mainDescription":["To obtain any remote changes from the repository use <-- git pull -->.",
    "But before that we need to set the branch we need to pull from. In our case, its master. Setting of a specific branch can be done using the command: ",
    "<-- git branch --set-upstream-to=origin/<Your Branch url if present> master -->"],
    "image":null,
    "code":["git branch --set-upstream-to=origin/master","git pull"],
    "postDescription":null
  },
  {
    "title":"Conclusion",
    "preDescription":null,
    "note":null,
    "mainDescription":["There are many GUI's present which would aid in git operations(Mainly diff of large files), But I would suggest command line for all other commands as it is very powerful and easy to use.",
      "These commands would be enough to get you started. For more advanced usages you can look at the advanced git tab or click the next link on bottom right corner."],
    "image":null,
    "code":null,
    "postDescription":null
  }
]
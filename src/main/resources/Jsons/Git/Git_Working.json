[
  {
    "title":"Git Command: init",
    "preDescription":null,
    "note":null,
    "mainDescription":["Let us create a new folder as Git-demo",
    "Create a git_file1.txt in it. This is the working area",
    "If we want to create a git repository in Git-demo folder, open git-bash prompt in that folder and type the command git init",
    "This will create a .git folder, which is our repository"],
    "image":"git/git_add.PNG",
    "code":null,
    "postDescription":["From the above snapshot we see how the git init has created a new .git folder"]
  },
  {
    "title":"Git Command: status",
    "preDescription":null,
    "note":null,
    "mainDescription":["Git status is used to know the status of git repository at that point in time",
    "If we do a git status now on the project we will see the fit_file1.txt in RED , saying it is untracked.",
    "Well its right, the file is just created in the working area but it has not been sent to the staging area yet.",
    "git status would yield the below result"],
    "image":"git/git_status.PNG",
    "code":null,
    "postDescription":null
  },
  {
    "title":"Git Command: add",
    "preDescription":null,
    "note":null,
    "mainDescription":["git add command would add the specified files to the staging area",
    "Running git add command and checking git status would show the file is in green which means git recognize's this file now(It will be tracked further on)."],
    "image":"git/git_add2.PNG",
    "code":null,
    "postDescription":null
  },
  {
    "title":"Git Command: commit",
    "preDescription":null,
    "note":null,
    "mainDescription":["git commit would move all the tracked files to the git repository",
    "Running git commit would ask for a mesage to be inserted, I prefer to give the message inline. It can be done by: git commit -m \"Put your message here\" ",
    "git log gives the history of the actions performed on the repository",
    "Running the above commands would yield the below shown results:"],
    "image":"git/git_commit.PNG",
    "code":null,
    "postDescription":["The git log shows the commit id , which is unique",
      "The first 6 digits are be used for tracking and checking the differences between the files"]
  },
  {
    "title":"Git Command: diff",
    "preDescription":null,
    "note":null,
    "mainDescription":["Consider we add some lines to git_file1.txt and commit it. If we want to check the differences between the commits, git diff is the command to go",
    "It gives the difference between the 2 commits"],
    "image":"git/git_diff.PNG",
    "code":["You can diff based on the git commit id or the HEAD pointer",
    "Do a git log , get the first 6 digits of the commit id and do a diff",
    "For example: git diff ef5066..f2d59b"],
    "postDescription":["HEAD points to the head/parent of the repository.",
    "HEAD~1 represents parent minus 1 check in",
    "Here we are finding the difference between parent-1 and parent , which shows 1 added line",
    "Use commit id or HEAD , whichever you are comfortable with"]
  },
  {
    "title":"Conclusion",
    "preDescription":null,
    "note":null,
    "mainDescription":["There are GUI's present which would aid in git operations(Mainly diff of large files), But I would suggest command line for all other commands as it is very powerful and easy to use.",
      "These commands would be enough to get you started. For more advanced usages you can look at the advanced git tab. You can use breadcrumb above to navigate."],
    "image":null,
    "code":null,
    "postDescription":null
  }
]
[
  {
    "title":"Git : Tips and Tricks",
    "preDescription":null,
    "note":null,
    "mainDescription":["Git has lot of tricks up its sleeves. In this forum , I will keep adding commands and tricks which can be used to get a little more juice out of git.",
    "If you have any tip of your own, please drop it in the comments section."],
    "image":null,
    "code": null,
    "postDescription":[]
  },
  {
    "title":"Git : Alias",
    "preDescription":null,
    "note":null,
    "mainDescription":["Git alias is my favourite command. As the name suggests it gives us the ability to make alias's.",
    "We can have have global alias's or specific to a repository.",
    "Global alias will follow the following syntax: <-- git config --global alias.<put alias name> \"Put the command here\" -->.",
    "Repository specific wont have have --global: <-- git config alias.<put alias name> \"Put the command here\" show -->."],
    "image":null,
    "code": ["git config --global alias.lga \"log --graph --all --decorate --oneline\"",
      "git config alias.sh show"],
    "postDescription":["Now doing git sh OR git lga will have the same effects."]
  },
  {
    "title":"Git : Autocorrect",
    "preDescription":null,
    "note":null,
    "mainDescription":["Consider you have butterfingers like me and usually end up typing things which we dont intend to. Well git understands our problem.",
    "If we set the autocorrect configuration , git will automatically run the command which resembles it.",
    "To set autocorrect : git config --global help.autocorrect 1 .Here 1 represents the number of milliseconds it will wait before executing."],
    "image":"git/git_autocorrect.PNG",
    "code": ["git config --global help.autocorrect 1"],
    "postDescription":["You can see in the above snip, how git identified my mistake."]
  },
  {
    "title":"Git : CRLF/LF",
    "preDescription":null,
    "note":null,
    "mainDescription":["Sometime back I had lot of issues with the line endings and it almost ruined my life. No Seriously.",
    "Well there is a git config which allows us to set the line endings.(Wish I had known earlier)",
    "git config --global core.autocrlf true/false/input",
    "It takes 3 inputs true or false or input. So what do they mean.",
      "true: converts CRLF to LF while checking in. While checking out it convert LF to CRLF. Only applicable to Text Files.",
    "false: commit as is. CRLF will be checked in and checked out as is.",
    "input: converts CRLF to LF while checking in. While checking out no conversion happens."],
    "image":null,
    "code": ["git config --global core.autocrlf true : Use when you have crossplatform checkins.",
    "git config --global core.autocrlf false : If working ONLY on Windows.",
    "git config --global core.autocrlf input : Mac/Linux."],
    "postDescription":null
  },
  {
    "title":"Git : Author Commits",
    "preDescription":null,
    "note":null,
    "mainDescription":["If you need to check all commit by a particular author, use : <-- git log --author=\"author name\" -->."],
    "image":null,
    "code": ["git log --author=\"darshangit\"",
    "If you want it to be pretty, you can use the alias from the first example : git lga --author=\"darshangit\" ."],
    "postDescription":null
  },
  {
    "title":"Git : Config List",
    "preDescription":null,
    "note":null,
    "mainDescription":["To Check all the variables in a config user : <-- git config --list --> ."],
    "image":null,
    "code": ["git config --list"],
    "postDescription":null
  },
  {
    "title":"Git : Unreachable hash/commit",
    "preDescription":null,
    "note":null,
    "mainDescription":["When there is a commit object that is unreachable. We can use : <-- git fsck --unreachable --> , to get the the commitId."],
    "image":null,
    "code": ["git fsck --unreachable"],
    "postDescription": ["Well that's it for now, I will keep updating this page as and when I come across something interesting."]
  }
]